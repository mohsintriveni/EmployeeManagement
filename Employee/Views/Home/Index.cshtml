@model List<EmployeeModel>
@using Employee.Services

@inject EmployeeService employeeService

<h1>Employee List</h1>

<div class="mb-3">
    <a id="addEmployee" data-toggle="modal" data-target="#addEmployeeModal" class="btn btn-success">Add</a>
</div>

<table id="employeeTable" class="table">
    <thead>
        <tr>
            <th>FirstName</th>
            <th>LastName</th>
            <th>Email</th>
            <th>Gender</th>
            <th>Salary</th>
            <th>Birth Date</th>
            <th>City</th>
            <th>State</th>
            <th>Country</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var employee in Model)
        {
            <tr>
                <td>@employee.FirstName</td>
                <td>@employee.LastName</td>
                <td>@employee.Email</td>
                <td>@employee.Gender</td>
                <td>@employee.Salary</td>
                <td>@employee.BirthDate.ToShortDateString()</td>
                <td>@await employeeService.GetEmployeeCity(employee.City)</td>
                <td>@await employeeService.GetEmployeeState(employee.State)</td>
                <td>@await employeeService.GetEmployeeCountry(employee.Country)</td>
                <td>
                    <button class="btn btn-primary view-details-btn" data-id="@employee.Id">View Details</button>
                    <a data-toggle="modal" data-target="#addEmployeeModal" class="btn btn-warning updateEmployee" data-id="@employee.Id">Edit</a>
                    <button class="btn btn-danger delete-btn" data-id="@employee.Id">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    await Html.RenderPartialAsync("AddEdit");
}

<div id="employee-details-container"></div>

<script>
    $(document).ready(function () {

        // function updateEmployeeList() {
        //     $.ajax({
        //         url: '/Home/Index',
        //         method: 'GET',
        //         success: function (data) {
        //             $('#employeeTable tbody').html(data);
        //         },
        //         error: function (xhr, status, error) {
        //             console.error(error);
        //         }
        //     });
        // }

        var ddlCountry = $('#ddlCountry');
        ddlCountry.append($("<option></option>").val('').html('Please Select Country'));
        $.ajax({
            url: 'http://localhost:5055/api/Country/get-countries',
            type: 'GET',
            dataType: 'json',
            success: function (d) {
                $.each(d, function (i, country) {
                    ddlCountry.append($("<option></option>").val(country.id).html(country.countryName));
                });
            },
            error: function () {
                alert('Error!');
            }
        });

        $("#ddlCountry").change(function () {
            var selectedValue = $(this).val();
            console.log("Selected value:", selectedValue);
            var CountryId = parseInt($(this).val());
            console.log(CountryId);

            if (!isNaN(CountryId)) {
                var ddlState = $('#ddlState');
                ddlState.empty();
                ddlState.append($("<option></option>").val('').html('Please wait ...'));

                debugger;
                $.ajax({
                    url: 'http://localhost:5055/api/States/get-states-by-country/',
                    type: 'GET',
                    dataType: 'json',
                    data: { Id: CountryId },
                    success: function (d) {

                        ddlState.empty();
                        ddlState.append($("<option></option>").val('').html('Select State'));
                        $.each(d, function (i, states) {
                            ddlState.append($("<option></option>").val(states.id).html(states.stateName));
                        });
                    },
                    error: function () {
                        alert('Error!');
                    }
                });
            }
        });

        $("#ddlState").change(function () {
            var StateId = parseInt($(this).val());
            if (!isNaN(StateId)) {
                var ddlCity = $('#ddlCity');
                ddlCity.append($("<option></option>").val('').html('Please wait ...'));

                debugger;
                $.ajax({
                    url: 'http://localhost:5055/api/City/get-cities-by-state/',
                    type: 'GET',
                    dataType: 'json',
                    data: { Id: StateId },
                    success: function (d) {
                        ddlCity.empty();
                        ddlCity.append($("<option></option>").val('').html('Select City Name'));
                        $.each(d, function (i, cities) {
                            ddlCity.append($("<option></option>").val(cities.id).html(cities.cityName));
                        });
                    },
                    error: function () {
                        alert('Error!');
                    }
                });
            }
        });

        $('.view-details-btn').click(function () {
            var employeeId = $(this).data('id');
            @* $.get("/Employee/EmployeeDetails/" + employeeId, function (data) {
                $('#employee-details-container').html(data);
            }); *@
            $.ajax({
                url: '/Employee/EmployeeDetails/',
                type: 'GET',
                data: { id: employeeId },
                success: function (result) {
                    $('#employee-details-container').html(result);
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                }
            });
        });

        // $('#addEmployee').click(function () {
        //     $('#addEmployeeModal').modal('show');
        // });

        // $('.updateEmployee').click(function () {
        //     $('#addEmployeeModal').modal('show');
        // });

        function openEntityModal(employeeData) {
            if (employeeData) {
                var employee = JSON.parse(employeeData);
                console.log(employee);
                $('#employeeId').val(employee.id);
                $('#firstName').val(employee.firstName);
                $('#lastName').val(employee.lastName);
                $('#email').val(employee.email);
                $('#gender').val(employee.gender);
                $('#hobbies').val(employee.hobbies);
                $('#salary').val(employee.salary);
                $('#maritalStatus').val(employee.maritalStatus);
                $('#birthDate').val(employee.birthDate);
                $('#ddlCountry').val(employee.country);
                $('#ddlState').val(employee.state);
                $('#ddlCity').val(employee.city);
                $('#zipCode').val(employee.zipCode);
                $('#password').val(employee.password);
                $('#address').val(employee.address);
            }
            else {
                $('#firstName').val('');
                $('#lastName').val('');
                $('#email').val('');
                $('#gender').val('');
                $('#hobbies').val('');
                $('#salary').val('');
                $('#maritalStatus').val('');
                $('#birthDate').val('');
                $('#ddlCountry').val('');
                $('#ddlState').val('');
                $('#ddlCity').val('');
                $('#zipCode').val('');
                $('#password').val('');
                $('#address').val('');
            }
            $('#addEmployeeModal').modal('show');
        }

        $('#addEmployee').click(function () {
            openEntityModal();
        });

        // $('.updateEmployee').click(function () {
        //     var employeeData = {
        //         firstName: $(this).data('firstName'),
        //         lastName: $(this).data('lastName'),
        //         // Get other employee data from data attributes
        //     };
        //     openEntityModal(employeeData);
        // });

        $('.updateEmployee').click(function () {
            var employeeId = $(this).data('id');
            console.log(employeeId)
            $.ajax({
                url: 'http://localhost:5055/api/Employees/get-employee-by-id/' + employeeId,
                method: 'GET',
                success: function (employee) {
                    openEntityModal(JSON.stringify(employee));
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        });

        function updateEmployeeList() {
            $.ajax({
                url: 'http://localhost:5055/api/Employees/get-all-employees',
                method: 'GET',
                success: function (data) {
                    var tableBody = $('#employeeTable tbody');
                    tableBody.empty();
                    data.forEach(function (employee) {
                        var row = $('<tr></tr>');
                        row.append('<td>' + employee.firstName + '</td>');
                        row.append('<td>' + employee.lastName + '</td>');
                        row.append('<td>' + employee.email + '</td>');
                        row.append('<td>' + employee.gender + '</td>');
                        row.append('<td>' + employee.salary + '</td>');
                    });
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }


        $('#saveEmployeeBtn').click(function (e) {
            e.preventDefault();

            var formData = new FormData($('#employeeForm')[0]);
            formData.append('photo', $('#photo')[0].files[0]);

            var currentDate = new Date().toISOString();
            formData.append('created', currentDate);

            var birthDate = $('#birthDate').val();
            console.log(birthDate);
            if (birthDate) {
                var birthDateISO = new Date(birthDate + 'T00:00:00').toISOString();
                formData.append('birthDate', birthDateISO);
            }

            var url = 'http://localhost:5055/api/Employees/add-employee/';
            var method = 'POST';
            var employeeId = $('#employeeId').val();
            console.log(employeeId);
            if (employeeId) {
                url = 'http://localhost:5055/api/Employees/update-employee/' + employeeId;
                method = 'PUT';
            }

            $.ajax({
                url: url,
                method: method,
                data: formData,
                processData: false,
                contentType: false,
                success: function () {
                    $('#addEmployeeModal').modal('hide');
                    updateEmployeeList();
                },
                error: function (xhr, status, error) {
                }
            });
        });

        $('.delete-btn').click(function () {
            var employeeId = $(this).data('id');
            var deleteButton = $(this);

            if (confirm("Are you sure you want to delete this employee?")) {
                $.ajax({
                    url: '/Employee/DeleteEmployee',
                    type: 'DELETE',
                    data: { id: employeeId },
                    success: function (result) {
                        console.log("Employee deleted successfully");
                        deleteButton.closest('tr').remove();
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText);
                    }
                });
            }
        });

    }); 
</script>
